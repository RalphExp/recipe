version: 2.1

executors:
  environment:
    docker:
      - image: circleci/golang:1.15
    working_directory:

jobs:
  test:
    executor: environment
    steps:
      - checkout 
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "api/go.sum" }}
      - run:
          name: Install Dependencies
          command: (cd api && go mod download)
      - save_cache:
          key: go-mod-v4-{{ checksum "api/go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Code linting
          command: >
            # ( cd api; go get -u golang.org/x/lint/golint )
            # golint ./...
      - run:
          name: Unit tests
          command: |
            # cd api && go test -v ./...
            exit 0

  build:
    executor: environment
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true  
      - run:          
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Login to ECR
          command: |
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - run:
          name: Build image
          command: >
            ( cd api; TAG=0.1.${CIRCLE_BUILD_NUM}
              docker build -t ralphexp/webapp:$TAG . )
      - run:
          name: Push image
          command: >
            ( cd api; TAG=0.1.${CIRCLE_BUILD_NUM}
              docker tag ralphexp/webapp:$TAG ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-2.amazonaws.com/ralphexp/webapp:$TAG ;
              docker tag ralphexp/webapp:$TAG ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-2.amazonaws.com/ralphexp/webapp:develop ;
              docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/ralphexp/webapp:$TAG ;
              docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/ralphexp/webapp:develop )

  deploy:
    executor: environment
    steps:
      - checkout
      - run:
          name: Deploy with Docker Compose
          command: |
            ssh -oStrictHostKeyChecking=no ubuntu@${AWS_IPADDRESS} aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
            ssh -oStrictHostKeyChecking=no ubuntu@${AWS_IPADDRESS} docker-compose pull && docker-compose up -d

workflows:
  ci_cd:
    jobs:
      - test
      - build:
        requires:
          test  
      - deploy:
        requires:
          test
          build
